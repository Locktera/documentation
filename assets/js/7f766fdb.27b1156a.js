"use strict";(self.webpackChunklocktera_api_documentation=self.webpackChunklocktera_api_documentation||[]).push([[533],{1924:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Use Cases/All-Use-Cases","title":"Getting Started","description":"This guide walks you through the steps required to set up your environment, configure your API access, and run use case scripts to explore the Locktera API\'s functionality.","source":"@site/docs/Use Cases/All-Use-Cases.md","sourceDirName":"Use Cases","slug":"/Use Cases/All-Use-Cases","permalink":"/documentation/docs/Use Cases/All-Use-Cases","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"Tag Management","permalink":"/documentation/docs/API/tag-management"},"next":{"title":"Writing DRM Rules","permalink":"/documentation/docs/Use Cases/DRM-Rules-Write"}}');var s=r(4848),i=r(8453);const o={},a="Getting Started",l={},c=[{value:"Getting Started",id:"getting-started-1",level:2},{value:"Running TypeScript Use Cases",id:"running-typescript-use-cases",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Installation",id:"installation",level:3},{value:"Running a Use Case",id:"running-a-use-case",level:3},{value:"Available Scripts",id:"available-scripts",level:3},{value:"TypeScript Files",id:"typescript-files",level:2},{value:"DynamicDrm.ts",id:"dynamicdrmts",level:3},{value:"Fetch.ts",id:"fetchts",level:3},{value:"Manifest.ts",id:"manifestts",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,s.jsx)(n.p,{children:"This guide walks you through the steps required to set up your environment, configure your API access, and run use case scripts to explore the Locktera API's functionality."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"getting-started-1",children:"Getting Started"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Clone this repository to your local machine:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"git clone https://github.com/Locktera/api-docs.git\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Log in to Locktera Share and go to the ",(0,s.jsx)(n.a,{href:"https://test.locktera.com/#/configuration/api_keys",children:"API Keys page"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a new API key."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Edit the ",(0,s.jsx)(n.code,{children:"env"})," file in the repository root."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Copy/Paste your ",(0,s.jsx)(n.code,{children:"ORG_ID"})," and ",(0,s.jsx)(n.code,{children:"API_KEY"})," values into the ",(0,s.jsx)(n.code,{children:"env"})," file and save it."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-env",children:"API_URL=https://test.locktera.com/api/v1/\r\nORG_ID=your_org_id_here\r\nAPI_KEY=your_api_key_here\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Explore the ",(0,s.jsx)(n.code,{children:"Use Case"})," directory."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["For further information, check the ",(0,s.jsx)(n.a,{href:"https://test.locktera.com/#/api",children:"API reference"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"running-typescript-use-cases",children:"Running TypeScript Use Cases"}),"\n",(0,s.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Node.js v20 or higher"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Navigate to this directory"}),"\n",(0,s.jsxs)(n.li,{children:["Install dependencies:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm install\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"running-a-use-case",children:"Running a Use Case"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Navigate to the directory of the use case you wish to run:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"cd encode\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Run the use case using ",(0,s.jsx)(n.code,{children:"npm run $NAME"}),":","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm run encode\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h1,{id:"use-cases",children:"Use Cases"}),"\n",(0,s.jsx)(n.p,{children:"See the documentation for the following use cases:"}),"\n",(0,s.jsxs)("div",{style:{display:"flex",gap:"20px",justifyContent:"center",flexWrap:"wrap",marginTop:"20px"},children:[(0,s.jsx)("div",{style:{flex:"1 1 300px",maxWidth:"400px",border:"1px solid #E0E0E0",borderRadius:"10px",padding:"20px",backgroundColor:"#F9FAFB",color:"#2B5592",boxShadow:"0px 2px 4px rgba(0,0,0,0.1)",transition:"box-shadow 0.3s ease-in-out",cursor:"pointer"},onMouseEnter:e=>e.currentTarget.style.boxShadow="0px 4px 8px rgba(0,0,0,0.2)",onMouseLeave:e=>e.currentTarget.style.boxShadow="0px 2px 4px rgba(0,0,0,0.1)",children:(0,s.jsxs)("a",{href:"/documentation/docs/Use Cases/DRM-Rules-Write",style:{textDecoration:"none",color:"inherit"},children:[(0,s.jsx)("h3",{children:"Writing DRM Rules"}),(0,s.jsx)("p",{style:{color:"#000000"},children:"Modify DRM rules on an existing container. "})]})}),(0,s.jsx)("div",{style:{flex:"1 1 300px",maxWidth:"400px",border:"1px solid #E0E0E0",borderRadius:"10px",padding:"20px",backgroundColor:"#F9FAFB",color:"#2B5592",boxShadow:"0px 2px 4px rgba(0,0,0,0.1)",transition:"box-shadow 0.3s ease-in-out",cursor:"pointer"},onMouseEnter:e=>e.currentTarget.style.boxShadow="0px 4px 8px rgba(0,0,0,0.2)",onMouseLeave:e=>e.currentTarget.style.boxShadow="0px 2px 4px rgba(0,0,0,0.1)",children:(0,s.jsxs)("a",{href:"/documentation/docs/Use Cases/Encode-Folder",style:{textDecoration:"none",color:"inherit"},children:[(0,s.jsx)("h3",{children:"Encode a folder"}),(0,s.jsx)("p",{style:{color:"#000000"},children:"Encode a new Locktera container."})]})})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h1,{id:"code-overview",children:"Code Overview"}),"\n",(0,s.jsx)(n.h3,{id:"available-scripts",children:"Available Scripts"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Script"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"drm/main.ts"})}),(0,s.jsx)(n.td,{children:"Modify DRM rules on an existing container."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"encode/main.ts"})}),(0,s.jsx)(n.td,{children:"Encode a new Locktera container."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"fetch.ts"})}),(0,s.jsx)(n.td,{children:"Fetch organizational data securely."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"DynamicDrm.ts"})}),(0,s.jsx)(n.td,{children:"Defines modifiable DRM rules for containers."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Manifest.ts"})}),(0,s.jsx)(n.td,{children:"Defines structure for container metadata."})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"typescript-files",children:"TypeScript Files"}),"\n",(0,s.jsx)(n.h3,{id:"dynamicdrmts",children:"DynamicDrm.ts"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"DynamicDrm.ts"})," file defines modifiable DRM rules for containers."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { type Drm } from './Manifest.ts';\r\n\r\n/** DRM rules modifiable after container creation */\r\nexport type DynamicDrm = Drm & {\r\n\t/** See `ContainerInfo.recipients` */\r\n\trecipients?: string[];\r\n\r\n\t/** See `ContainerInfo.downloadable` */\r\n\tdownloadable: boolean;\r\n};\r\n\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"fetchts",children:"Fetch.ts"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"fetch.ts file"})," handles API requests with authorization headers."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import * as dotenv from 'dotenv';\r\nimport * as path from 'node:path';\r\n\r\n// Get the absolute path of this file\r\nconst DIRNAME = path.dirname(new URL(import.meta.url).pathname);\r\n\r\n// Load IDs and keys from the env file in the repository root\r\ndotenv.config({ path: path.join(DIRNAME, '../../env') });\r\n\r\nexport const API_URL = process.env.API_URL;\r\nexport const ORG_ID = process.env.ORG_ID;\r\nexport const API_KEY = process.env.API_KEY;\r\n\r\nif (!API_URL) throw new Error('API_URL is required');\r\nif (!ORG_ID) throw new Error('ORG_ID is required');\r\nif (!API_KEY) throw new Error('API_KEY is required');\r\n\r\nasync function api_fetch (url: string, init?: RequestInit) {\r\n    // Combine the base API URL and remove duplicate slashes\r\n    url = path.join(API_URL!, url);\r\n\r\n    // Add the Authorization header containing the API key\r\n    init = {\r\n        ...init,\r\n        headers: {\r\n            ...init?.headers,\r\n            'authorization': `Bearer ${API_KEY}`,\r\n        },\r\n    };\r\n\r\n    const response = await fetch(url, init);\r\n\r\n    if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message);\r\n    }\r\n\r\n    return await response.json();\r\n}\r\n\r\nexport async function verify_identity () {\r\n    // Fetch our org information\r\n    const org_data = await api_fetch(`/orgs/${ORG_ID}`);\r\n    console.log('Logged in as:', org_data.email);\r\n}\r\n\r\nexport {\r\n    api_fetch as default,\r\n    api_fetch as fetch\r\n};\r\n\r\n\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"manifestts",children:"Manifest.ts"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Manifest.ts"})," file defines the structure and types for handling Locktera container metadata, such as DRM rules, recipients, and download permissions."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"/** Locktera container manifest */\r\nexport type Manifest = {\r\n    /** Information about the container itself */\r\n    container: ContainerInfo;\r\n\r\n    /** Information about each content file, indexed by name */\r\n    files?: Record<string, FileInfo>;\r\n};\r\n\r\n/** Information about the container itself */\r\nexport type ContainerInfo = {\r\n    /**\r\n     * A list of email addreses, with an optional wilcdard on either side of the `@`, e.g.:\r\n     * - `example@gmail.com`: A single email address\r\n     * - `*@locktera.com`: Any email from a given domain\r\n     * - `*@*,`: Any logged-in viewer, regardless of email address\r\n     */\r\n    recipients?: string[];\r\n\r\n    /** Whether or not the content is downloadable. Only applies to viewers; the sender can always download all content */\r\n    downloadable: boolean;\r\n\r\n    /** Password to use for encryption, if desired. If provided, viewers must enter this password to decrypt the contents. */\r\n    password?: string;\r\n\r\n    /** Desired DRM rules */\r\n    drm?: Drm;\r\n};\r\n\r\n/** Container-wide access rules */\r\nexport type Drm = {\r\n    /**\r\n     * Whether the DRM should be modifiable after the container is encoded; default false.\r\n     * If true, the DRM will be stored in the Locktera database and be modifiable by API. If false, the DRM will be encrypted directly in the container and cannot be modified.\r\n     */\r\n    dynamic?: boolean;\r\n\r\n    /** Geolocation rules */\r\n    geo?: DrmRules<GeoRule>;\r\n\r\n    /**\r\n     * IPv4 address rules. The following formats are supported:\r\n     * - `192.168.1.10`: Single IP address\r\n     * - `192.168.1.0/24`: Subnet mask\r\n     * - `192.*.1.*`: Wildcard\r\n     * - `192.168.1.0-192.168.1.255`: Range\r\n     * - `192.168.1.10/255.0.255.0`: IP mask\r\n     */\r\n    ip?: DrmRules<string>;\r\n\r\n    /** The number of times each viewer can open the container */\r\n    opens?: number;\r\n\r\n    /** The time range for which the content is accessible */\r\n    time?: TimeRule;\r\n};\r\n\r\n/**\r\n * List of allow and block rules of a particular type. For each type of DRM rule:\r\n * - If any allow rules are specified, only allow a viewer who matches an allow rule\r\n * - If there are only block rules, only allow a viewer who does not match any block rules\r\n */\r\nexport type DrmRules<T> = {\r\n    /** Allow viewers matching these rules to access the content */\r\n    allow?: T[];\r\n\r\n    /** Block viewers matching these rules from accessing the content */\r\n    block?: T[];\r\n};\r\n\r\n/** Geolocation rule */\r\nexport type GeoRule = {\r\n    /** Continent name */\r\n    continent?: string;\r\n\r\n    /** Country name */\r\n    country?: string;\r\n\r\n    /** Subdivision (e.g. prefecture, province, state, county) */\r\n    subdivision?: string;\r\n\r\n    /** City name */\r\n    city?: string;\r\n};\r\n\r\n/** Time-range rule */\r\nexport type TimeRule = {\r\n    /** The time before which the content is inaccessible */\r\n    start?: Date;\r\n\r\n    /** The time after which the content is inaccessible */\r\n    end?: Date;\r\n};\r\n\r\n/** Information about one content file */\r\nexport type FileInfo = {\r\n    /** Content type of the file */\r\n    type?: string;\r\n\r\n    /** Number of pages in a document */\r\n    pages?: number;\r\n\r\n    /** Duration of a media file in seconds */\r\n    duration?: number;\r\n\r\n    /** Whether the file should be hidden from the viewer menu; default false */\r\n    hidden?: boolean;\r\n\r\n    /** Name of a file to view instead of this file when it is chosen from the menu */\r\n    view_instead?: string;\r\n\r\n    /** Name of a file to download instead of this file when the download button is pressed */\r\n    download_instead?: string;\r\n};\r\n\r\n\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h1,{id:"accessing-typescript-files-on-github",children:"Accessing TypeScript Files on GitHub"}),"\n",(0,s.jsxs)(n.p,{children:["For full TypeScript implementations, visit the ",(0,s.jsx)(n.a,{href:"https://github.com/Locktera/api-docs.git",children:"GitHub repository."})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"drm/main.ts"}),": Modify DRM rules on an existing container."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"encode/main.ts"}),": Encode a new Locktera container."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DynamicDrm.ts"}),": Dynamic DRM configurations."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fetch.ts"}),": API request handling."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Manifest.ts"}),": Defines structure for container metadata."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"main.ts"}),": Entry point for running use cases."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Use these files in conjunction with the use cases to understand the Locktera API."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);